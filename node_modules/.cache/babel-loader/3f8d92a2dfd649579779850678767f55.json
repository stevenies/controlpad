{"ast":null,"code":"import { getAssetPath } from '@stencil/core/internal/client';\nlet CACHED_MAP;\n\nconst getIconMap = () => {\n  if (typeof window === 'undefined') {\n    return new Map();\n  } else {\n    if (!CACHED_MAP) {\n      const win = window;\n      win.Ionicons = win.Ionicons || {};\n      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n\n    return CACHED_MAP;\n  }\n};\n\nconst addIcons = icons => {\n  const map = getIconMap();\n  Object.keys(icons).forEach(name => map.set(name, icons[name]));\n};\n\nconst getUrl = i => {\n  let url = getSrc(i.src);\n\n  if (url) {\n    return url;\n  }\n\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n\n  if (url) {\n    return getNamedUrl(url);\n  }\n\n  if (i.icon) {\n    url = getSrc(i.icon);\n\n    if (url) {\n      return url;\n    }\n\n    url = getSrc(i.icon[i.mode]);\n\n    if (url) {\n      return url;\n    }\n  }\n\n  return null;\n};\n\nconst getNamedUrl = iconName => {\n  const url = getIconMap().get(iconName);\n\n  if (url) {\n    return url;\n  }\n\n  return getAssetPath(`svg/${iconName}.svg`);\n};\n\nconst getName = (iconName, icon, mode, ios, md) => {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md'; // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n\n  if (ios && mode === 'ios') {\n    iconName = toLower(ios);\n  } else if (md && mode === 'md') {\n    iconName = toLower(md);\n  } else {\n    if (!iconName && icon && !isSrc(icon)) {\n      iconName = icon;\n    }\n\n    if (isStr(iconName)) {\n      iconName = toLower(iconName);\n    }\n  }\n\n  if (!isStr(iconName) || iconName.trim() === '') {\n    return null;\n  } // only allow alpha characters and dash\n\n\n  const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n\n  if (invalidChars !== '') {\n    return null;\n  }\n\n  return iconName;\n};\n\nconst getSrc = src => {\n  if (isStr(src)) {\n    src = src.trim();\n\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n\n  return null;\n};\n\nconst isSrc = str => str.length > 0 && /(\\/|\\.)/.test(str);\n\nconst isStr = val => typeof val === 'string';\n\nconst toLower = val => val.toLowerCase();\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\n\n\nconst inheritAttributes = function (el) {\n  let attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const attributeObject = {};\n  attributes.forEach(attr => {\n    if (el.hasAttribute(attr)) {\n      const value = el.getAttribute(attr);\n\n      if (value !== null) {\n        attributeObject[attr] = el.getAttribute(attr);\n      }\n\n      el.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\n\nexport { addIcons as a, inheritAttributes as b, getName as c, getUrl as g, isStr as i };","map":{"version":3,"names":["getAssetPath","CACHED_MAP","getIconMap","window","Map","win","Ionicons","map","addIcons","icons","Object","keys","forEach","name","set","getUrl","i","url","getSrc","src","getName","icon","mode","ios","md","getNamedUrl","iconName","get","toLower","isSrc","isStr","trim","invalidChars","replace","str","length","test","val","toLowerCase","inheritAttributes","el","attributes","attributeObject","attr","hasAttribute","value","getAttribute","removeAttribute","a","b","c","g"],"sources":["C:/Users/steve/git/controlpad/node_modules/@ionic/react/node_modules/ionicons/components/utils.js"],"sourcesContent":["import { getAssetPath } from '@stencil/core/internal/client';\n\nlet CACHED_MAP;\nconst getIconMap = () => {\n  if (typeof window === 'undefined') {\n    return new Map();\n  }\n  else {\n    if (!CACHED_MAP) {\n      const win = window;\n      win.Ionicons = win.Ionicons || {};\n      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n    return CACHED_MAP;\n  }\n};\nconst addIcons = (icons) => {\n  const map = getIconMap();\n  Object.keys(icons).forEach(name => map.set(name, icons[name]));\n};\nconst getUrl = (i) => {\n  let url = getSrc(i.src);\n  if (url) {\n    return url;\n  }\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n  if (url) {\n    return getNamedUrl(url);\n  }\n  if (i.icon) {\n    url = getSrc(i.icon);\n    if (url) {\n      return url;\n    }\n    url = getSrc(i.icon[i.mode]);\n    if (url) {\n      return url;\n    }\n  }\n  return null;\n};\nconst getNamedUrl = (iconName) => {\n  const url = getIconMap().get(iconName);\n  if (url) {\n    return url;\n  }\n  return getAssetPath(`svg/${iconName}.svg`);\n};\nconst getName = (iconName, icon, mode, ios, md) => {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n  // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n  if (ios && mode === 'ios') {\n    iconName = toLower(ios);\n  }\n  else if (md && mode === 'md') {\n    iconName = toLower(md);\n  }\n  else {\n    if (!iconName && icon && !isSrc(icon)) {\n      iconName = icon;\n    }\n    if (isStr(iconName)) {\n      iconName = toLower(iconName);\n    }\n  }\n  if (!isStr(iconName) || iconName.trim() === '') {\n    return null;\n  }\n  // only allow alpha characters and dash\n  const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n  if (invalidChars !== '') {\n    return null;\n  }\n  return iconName;\n};\nconst getSrc = (src) => {\n  if (isStr(src)) {\n    src = src.trim();\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n  return null;\n};\nconst isSrc = (str) => str.length > 0 && /(\\/|\\.)/.test(str);\nconst isStr = (val) => typeof val === 'string';\nconst toLower = (val) => val.toLowerCase();\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nconst inheritAttributes = (el, attributes = []) => {\n  const attributeObject = {};\n  attributes.forEach(attr => {\n    if (el.hasAttribute(attr)) {\n      const value = el.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = el.getAttribute(attr);\n      }\n      el.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\n\nexport { addIcons as a, inheritAttributes as b, getName as c, getUrl as g, isStr as i };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}