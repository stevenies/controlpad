{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { c as chevronDown } from './index6.js';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { r as raf, t as transitionEndAsync, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers.js';\nimport { d as defineCustomElement$2 } from './icon.js';\nconst accordionIosCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}:host(.accordion-next) ::slotted(ion-item[slot=header]){--border-width:0.55px 0px 0.55px 0px}\";\nconst accordionMdCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}\";\nconst Accordion = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    var _this;\n\n    super();\n    _this = this;\n\n    this.__registerHost();\n\n    this.__attachShadow();\n\n    this.updateListener = () => this.updateState(false);\n\n    this.state = 1\n    /* Collapsed */\n    ;\n    this.isNext = false;\n    this.isPrevious = false;\n    /**\n     * The value of the accordion. Defaults to an autogenerated\n     * value.\n     */\n\n    this.value = `ion-accordion-${accordionIds++}`;\n    /**\n     * If `true`, the accordion cannot be interacted with.\n     */\n\n    this.disabled = false;\n    /**\n     * If `true`, the accordion cannot be interacted with,\n     * but does not alter the opacity.\n     */\n\n    this.readonly = false;\n    /**\n     * The toggle icon to use. This icon will be\n     * rotated when the accordion is expanded\n     * or collapsed.\n     */\n\n    this.toggleIcon = chevronDown;\n    /**\n     * The slot inside of `ion-item` to\n     * place the toggle icon. Defaults to `'end'`.\n     */\n\n    this.toggleIconSlot = 'end';\n\n    this.setItemDefaults = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * For a11y purposes, we make\n       * the ion-item a button so users\n       * can tab to it and use keyboard\n       * navigation to get around.\n       */\n\n\n      ionItem.button = true;\n      ionItem.detail = false;\n      /**\n       * By default, the lines in an\n       * item should be full here, but\n       * only do that if a user has\n       * not explicitly overridden them\n       */\n\n      if (ionItem.lines === undefined) {\n        ionItem.lines = 'full';\n      }\n    };\n\n    this.getSlottedHeaderIonItem = () => {\n      const {\n        headerEl\n      } = this;\n\n      if (!headerEl) {\n        return;\n      }\n      /**\n       * Get the first ion-item\n       * slotted in the header slot\n       */\n\n\n      const slot = headerEl.querySelector('slot');\n\n      if (!slot) {\n        return;\n      } // This is not defined in unit tests\n\n\n      const ionItem = slot.assignedElements && slot.assignedElements().find(el => el.tagName === 'ION-ITEM');\n      return ionItem;\n    };\n\n    this.setAria = function () {\n      let expanded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      const ionItem = _this.getSlottedHeaderIonItem();\n\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * Get the native <button> element inside of\n       * ion-item because that is what will be focused\n       */\n\n\n      const root = getElementRoot(ionItem);\n      const button = root.querySelector('button');\n\n      if (!button) {\n        return;\n      }\n\n      button.setAttribute('aria-expanded', `${expanded}`);\n    };\n\n    this.slotToggleIcon = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n\n      if (!ionItem) {\n        return;\n      }\n\n      const {\n        toggleIconSlot,\n        toggleIcon\n      } = this;\n      /**\n       * Check if there already is a toggle icon.\n       * If so, do not add another one.\n       */\n\n      const existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\n\n      if (existingToggleIcon) {\n        return;\n      }\n\n      const iconEl = document.createElement('ion-icon');\n      iconEl.slot = toggleIconSlot;\n      iconEl.lazy = false;\n      iconEl.classList.add('ion-accordion-toggle-icon');\n      iconEl.icon = toggleIcon;\n      iconEl.setAttribute('aria-hidden', 'true');\n      ionItem.appendChild(iconEl);\n    };\n\n    this.expandAccordion = function () {\n      let initialUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      const {\n        contentEl,\n        contentElWrapper\n      } = _this;\n\n      if (initialUpdate || contentEl === undefined || contentElWrapper === undefined) {\n        _this.state = 4\n        /* Expanded */\n        ;\n        return;\n      }\n\n      if (_this.state === 4\n      /* Expanded */\n      ) {\n        return;\n      }\n\n      if (_this.currentRaf !== undefined) {\n        cancelAnimationFrame(_this.currentRaf);\n      }\n\n      if (_this.shouldAnimate()) {\n        raf(() => {\n          _this.state = 8\n          /* Expanding */\n          ;\n          _this.currentRaf = raf(async () => {\n            const contentHeight = contentElWrapper.offsetHeight;\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            contentEl.style.setProperty('max-height', `${contentHeight}px`);\n            await waitForTransition;\n            _this.state = 4\n            /* Expanded */\n            ;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      } else {\n        _this.state = 4\n        /* Expanded */\n        ;\n      }\n    };\n\n    this.collapseAccordion = function () {\n      let initialUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      const {\n        contentEl\n      } = _this;\n\n      if (initialUpdate || contentEl === undefined) {\n        _this.state = 1\n        /* Collapsed */\n        ;\n        return;\n      }\n\n      if (_this.state === 1\n      /* Collapsed */\n      ) {\n        return;\n      }\n\n      if (_this.currentRaf !== undefined) {\n        cancelAnimationFrame(_this.currentRaf);\n      }\n\n      if (_this.shouldAnimate()) {\n        _this.currentRaf = raf(async () => {\n          const contentHeight = contentEl.offsetHeight;\n          contentEl.style.setProperty('max-height', `${contentHeight}px`);\n          raf(async () => {\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            _this.state = 2\n            /* Collapsing */\n            ;\n            await waitForTransition;\n            _this.state = 1\n            /* Collapsed */\n            ;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      } else {\n        _this.state = 1\n        /* Collapsed */\n        ;\n      }\n    };\n    /**\n     * Helper function to determine if\n     * something should animate.\n     * If prefers-reduced-motion is set\n     * then we should not animate, regardless\n     * of what is set in the config.\n     */\n\n\n    this.shouldAnimate = () => {\n      if (typeof window === 'undefined') {\n        return false;\n      }\n\n      const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\n\n      if (prefersReducedMotion) {\n        return false;\n      }\n\n      const animated = config.get('animated', true);\n\n      if (!animated) {\n        return false;\n      }\n\n      if (this.accordionGroupEl && !this.accordionGroupEl.animated) {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.updateState = async function () {\n      let initialUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      const accordionGroup = _this.accordionGroupEl;\n      const accordionValue = _this.value;\n\n      if (!accordionGroup) {\n        return;\n      }\n\n      const value = accordionGroup.value;\n      const shouldExpand = Array.isArray(value) ? value.includes(accordionValue) : value === accordionValue;\n\n      if (shouldExpand) {\n        _this.expandAccordion(initialUpdate);\n\n        _this.isNext = _this.isPrevious = false;\n      } else {\n        _this.collapseAccordion(initialUpdate);\n        /**\n         * When using popout or inset,\n         * the collapsed accordion items\n         * may need additional border radius\n         * applied. Check to see if the\n         * next or previous accordion is selected.\n         */\n\n\n        const nextAccordion = _this.getNextSibling();\n\n        const nextAccordionValue = nextAccordion === null || nextAccordion === void 0 ? void 0 : nextAccordion.value;\n\n        if (nextAccordionValue !== undefined) {\n          _this.isPrevious = Array.isArray(value) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\n        }\n\n        const previousAccordion = _this.getPreviousSibling();\n\n        const previousAccordionValue = previousAccordion === null || previousAccordion === void 0 ? void 0 : previousAccordion.value;\n\n        if (previousAccordionValue !== undefined) {\n          _this.isNext = Array.isArray(value) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\n        }\n      }\n    };\n\n    this.getNextSibling = () => {\n      if (!this.el) {\n        return;\n      }\n\n      const nextSibling = this.el.nextElementSibling;\n\n      if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n\n      return nextSibling;\n    };\n\n    this.getPreviousSibling = () => {\n      if (!this.el) {\n        return;\n      }\n\n      const previousSibling = this.el.previousElementSibling;\n\n      if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n\n      return previousSibling;\n    };\n  }\n\n  connectedCallback() {\n    var _a;\n\n    const accordionGroupEl = this.accordionGroupEl = (_a = this.el) === null || _a === void 0 ? void 0 : _a.closest('ion-accordion-group');\n\n    if (accordionGroupEl) {\n      this.updateState(true);\n      addEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n\n  disconnectedCallback() {\n    const accordionGroupEl = this.accordionGroupEl;\n\n    if (accordionGroupEl) {\n      removeEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n\n  componentDidLoad() {\n    this.setItemDefaults();\n    this.slotToggleIcon();\n    /**\n     * We need to wait a tick because we\n     * just set ionItem.button = true and\n     * the button has not have been rendered yet.\n     */\n\n    raf(() => {\n      /**\n       * Set aria label on button inside of ion-item\n       * once the inner content has been rendered.\n       */\n      const expanded = this.state === 4\n      /* Expanded */\n      || this.state === 8\n      /* Expanding */\n      ;\n      this.setAria(expanded);\n    });\n  }\n\n  toggleExpanded() {\n    const {\n      accordionGroupEl,\n      value,\n      state\n    } = this;\n\n    if (accordionGroupEl) {\n      /**\n       * Because the accordion group may or may\n       * not allow multiple accordions open, we\n       * need to request the toggling of this\n       * accordion and the accordion group will\n       * make the decision on whether or not\n       * to allow it.\n       */\n      const expand = state === 1\n      /* Collapsed */\n      || state === 2\n      /* Collapsing */\n      ;\n      accordionGroupEl.requestAccordionToggle(value, expand);\n    }\n  }\n\n  render() {\n    const {\n      disabled,\n      readonly\n    } = this;\n    const mode = getIonMode(this);\n    const expanded = this.state === 4\n    /* Expanded */\n    || this.state === 8\n    /* Expanding */\n    ;\n    const headerPart = expanded ? 'header expanded' : 'header';\n    const contentPart = expanded ? 'content expanded' : 'content';\n    this.setAria(expanded);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        'accordion-expanding': this.state === 8\n        /* Expanding */\n        ,\n        'accordion-expanded': this.state === 4\n        /* Expanded */\n        ,\n        'accordion-collapsing': this.state === 2\n        /* Collapsing */\n        ,\n        'accordion-collapsed': this.state === 1\n        /* Collapsed */\n        ,\n        'accordion-next': this.isNext,\n        'accordion-previous': this.isPrevious,\n        'accordion-disabled': disabled,\n        'accordion-readonly': readonly,\n        'accordion-animated': config.getBoolean('animated', true)\n      }\n    }, h(\"div\", {\n      onClick: () => this.toggleExpanded(),\n      id: \"header\",\n      part: headerPart,\n      \"aria-controls\": \"content\",\n      ref: headerEl => this.headerEl = headerEl\n    }, h(\"slot\", {\n      name: \"header\"\n    })), h(\"div\", {\n      id: \"content\",\n      part: contentPart,\n      role: \"region\",\n      \"aria-labelledby\": \"header\",\n      ref: contentEl => this.contentEl = contentEl\n    }, h(\"div\", {\n      id: \"content-wrapper\",\n      ref: contentElWrapper => this.contentElWrapper = contentElWrapper\n    }, h(\"slot\", {\n      name: \"content\"\n    }))));\n  }\n\n  static get delegatesFocus() {\n    return true;\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get style() {\n    return {\n      ios: accordionIosCss,\n      md: accordionMdCss\n    };\n  }\n\n}, [49, \"ion-accordion\", {\n  \"value\": [1],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"toggleIcon\": [1, \"toggle-icon\"],\n  \"toggleIconSlot\": [1, \"toggle-icon-slot\"],\n  \"state\": [32],\n  \"isNext\": [32],\n  \"isPrevious\": [32]\n}]);\nlet accordionIds = 0;\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-accordion\", \"ion-icon\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-accordion\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Accordion);\n        }\n\n        break;\n\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonAccordion = Accordion;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonAccordion, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","h","Host","c","chevronDown","config","b","getIonMode","r","raf","t","transitionEndAsync","a","addEventListener","removeEventListener","g","getElementRoot","d","defineCustomElement$2","accordionIosCss","accordionMdCss","Accordion","constructor","__registerHost","__attachShadow","updateListener","updateState","state","isNext","isPrevious","value","accordionIds","disabled","readonly","toggleIcon","toggleIconSlot","setItemDefaults","ionItem","getSlottedHeaderIonItem","button","detail","lines","undefined","headerEl","slot","querySelector","assignedElements","find","el","tagName","setAria","expanded","root","setAttribute","slotToggleIcon","existingToggleIcon","iconEl","document","createElement","lazy","classList","add","icon","appendChild","expandAccordion","initialUpdate","contentEl","contentElWrapper","currentRaf","cancelAnimationFrame","shouldAnimate","contentHeight","offsetHeight","waitForTransition","style","setProperty","removeProperty","collapseAccordion","window","prefersReducedMotion","matchMedia","matches","animated","get","accordionGroupEl","accordionGroup","accordionValue","shouldExpand","Array","isArray","includes","nextAccordion","getNextSibling","nextAccordionValue","previousAccordion","getPreviousSibling","previousAccordionValue","nextSibling","nextElementSibling","previousSibling","previousElementSibling","connectedCallback","_a","closest","disconnectedCallback","componentDidLoad","toggleExpanded","expand","requestAccordionToggle","render","mode","headerPart","contentPart","class","getBoolean","onClick","id","part","ref","name","role","delegatesFocus","ios","md","defineCustomElement$1","customElements","components","forEach","define","IonAccordion","defineCustomElement"],"sources":["C:/Users/steve/git/controlpad/node_modules/@ionic/core/components/ion-accordion.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { c as chevronDown } from './index6.js';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { r as raf, t as transitionEndAsync, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers.js';\nimport { d as defineCustomElement$2 } from './icon.js';\n\nconst accordionIosCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}:host(.accordion-next) ::slotted(ion-item[slot=header]){--border-width:0.55px 0px 0.55px 0px}\";\n\nconst accordionMdCss = \":host{display:block;position:relative;width:100%;background-color:var(--ion-background-color, #ffffff);overflow:hidden;z-index:0}:host(.accordion-expanding) ::slotted(ion-item[slot=header]),:host(.accordion-expanded) ::slotted(ion-item[slot=header]){--border-width:0px}:host(.accordion-animated){-webkit-transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:all 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}:host(.accordion-animated) #content{-webkit-transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);transition:max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1)}#content{overflow:hidden;will-change:max-height}:host(.accordion-collapsing) #content{max-height:0 !important}:host(.accordion-collapsed) #content{display:none}:host(.accordion-expanding) #content{max-height:0}:host(.accordion-disabled) #header,:host(.accordion-readonly) #header,:host(.accordion-disabled) #content,:host(.accordion-readonly) #content{pointer-events:none}:host(.accordion-disabled) #header,:host(.accordion-disabled) #content{opacity:0.4}@media (prefers-reduced-motion: reduce){:host,#content{-webkit-transition:none !important;transition:none !important}}\";\n\nconst Accordion = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.updateListener = () => this.updateState(false);\n    this.state = 1 /* Collapsed */;\n    this.isNext = false;\n    this.isPrevious = false;\n    /**\n     * The value of the accordion. Defaults to an autogenerated\n     * value.\n     */\n    this.value = `ion-accordion-${accordionIds++}`;\n    /**\n     * If `true`, the accordion cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * The toggle icon to use. This icon will be\n     * rotated when the accordion is expanded\n     * or collapsed.\n     */\n    this.toggleIcon = chevronDown;\n    /**\n     * The slot inside of `ion-item` to\n     * place the toggle icon. Defaults to `'end'`.\n     */\n    this.toggleIconSlot = 'end';\n    this.setItemDefaults = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * For a11y purposes, we make\n       * the ion-item a button so users\n       * can tab to it and use keyboard\n       * navigation to get around.\n       */\n      ionItem.button = true;\n      ionItem.detail = false;\n      /**\n       * By default, the lines in an\n       * item should be full here, but\n       * only do that if a user has\n       * not explicitly overridden them\n       */\n      if (ionItem.lines === undefined) {\n        ionItem.lines = 'full';\n      }\n    };\n    this.getSlottedHeaderIonItem = () => {\n      const { headerEl } = this;\n      if (!headerEl) {\n        return;\n      }\n      /**\n       * Get the first ion-item\n       * slotted in the header slot\n       */\n      const slot = headerEl.querySelector('slot');\n      if (!slot) {\n        return;\n      }\n      // This is not defined in unit tests\n      const ionItem = slot.assignedElements &&\n        slot.assignedElements().find((el) => el.tagName === 'ION-ITEM');\n      return ionItem;\n    };\n    this.setAria = (expanded = false) => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      /**\n       * Get the native <button> element inside of\n       * ion-item because that is what will be focused\n       */\n      const root = getElementRoot(ionItem);\n      const button = root.querySelector('button');\n      if (!button) {\n        return;\n      }\n      button.setAttribute('aria-expanded', `${expanded}`);\n    };\n    this.slotToggleIcon = () => {\n      const ionItem = this.getSlottedHeaderIonItem();\n      if (!ionItem) {\n        return;\n      }\n      const { toggleIconSlot, toggleIcon } = this;\n      /**\n       * Check if there already is a toggle icon.\n       * If so, do not add another one.\n       */\n      const existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\n      if (existingToggleIcon) {\n        return;\n      }\n      const iconEl = document.createElement('ion-icon');\n      iconEl.slot = toggleIconSlot;\n      iconEl.lazy = false;\n      iconEl.classList.add('ion-accordion-toggle-icon');\n      iconEl.icon = toggleIcon;\n      iconEl.setAttribute('aria-hidden', 'true');\n      ionItem.appendChild(iconEl);\n    };\n    this.expandAccordion = (initialUpdate = false) => {\n      const { contentEl, contentElWrapper } = this;\n      if (initialUpdate || contentEl === undefined || contentElWrapper === undefined) {\n        this.state = 4 /* Expanded */;\n        return;\n      }\n      if (this.state === 4 /* Expanded */) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        raf(() => {\n          this.state = 8 /* Expanding */;\n          this.currentRaf = raf(async () => {\n            const contentHeight = contentElWrapper.offsetHeight;\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            contentEl.style.setProperty('max-height', `${contentHeight}px`);\n            await waitForTransition;\n            this.state = 4 /* Expanded */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 4 /* Expanded */;\n      }\n    };\n    this.collapseAccordion = (initialUpdate = false) => {\n      const { contentEl } = this;\n      if (initialUpdate || contentEl === undefined) {\n        this.state = 1 /* Collapsed */;\n        return;\n      }\n      if (this.state === 1 /* Collapsed */) {\n        return;\n      }\n      if (this.currentRaf !== undefined) {\n        cancelAnimationFrame(this.currentRaf);\n      }\n      if (this.shouldAnimate()) {\n        this.currentRaf = raf(async () => {\n          const contentHeight = contentEl.offsetHeight;\n          contentEl.style.setProperty('max-height', `${contentHeight}px`);\n          raf(async () => {\n            const waitForTransition = transitionEndAsync(contentEl, 2000);\n            this.state = 2 /* Collapsing */;\n            await waitForTransition;\n            this.state = 1 /* Collapsed */;\n            contentEl.style.removeProperty('max-height');\n          });\n        });\n      }\n      else {\n        this.state = 1 /* Collapsed */;\n      }\n    };\n    /**\n     * Helper function to determine if\n     * something should animate.\n     * If prefers-reduced-motion is set\n     * then we should not animate, regardless\n     * of what is set in the config.\n     */\n    this.shouldAnimate = () => {\n      if (typeof window === 'undefined') {\n        return false;\n      }\n      const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\n      if (prefersReducedMotion) {\n        return false;\n      }\n      const animated = config.get('animated', true);\n      if (!animated) {\n        return false;\n      }\n      if (this.accordionGroupEl && !this.accordionGroupEl.animated) {\n        return false;\n      }\n      return true;\n    };\n    this.updateState = async (initialUpdate = false) => {\n      const accordionGroup = this.accordionGroupEl;\n      const accordionValue = this.value;\n      if (!accordionGroup) {\n        return;\n      }\n      const value = accordionGroup.value;\n      const shouldExpand = Array.isArray(value) ? value.includes(accordionValue) : value === accordionValue;\n      if (shouldExpand) {\n        this.expandAccordion(initialUpdate);\n        this.isNext = this.isPrevious = false;\n      }\n      else {\n        this.collapseAccordion(initialUpdate);\n        /**\n         * When using popout or inset,\n         * the collapsed accordion items\n         * may need additional border radius\n         * applied. Check to see if the\n         * next or previous accordion is selected.\n         */\n        const nextAccordion = this.getNextSibling();\n        const nextAccordionValue = nextAccordion === null || nextAccordion === void 0 ? void 0 : nextAccordion.value;\n        if (nextAccordionValue !== undefined) {\n          this.isPrevious = Array.isArray(value) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\n        }\n        const previousAccordion = this.getPreviousSibling();\n        const previousAccordionValue = previousAccordion === null || previousAccordion === void 0 ? void 0 : previousAccordion.value;\n        if (previousAccordionValue !== undefined) {\n          this.isNext = Array.isArray(value) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\n        }\n      }\n    };\n    this.getNextSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const nextSibling = this.el.nextElementSibling;\n      if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return nextSibling;\n    };\n    this.getPreviousSibling = () => {\n      if (!this.el) {\n        return;\n      }\n      const previousSibling = this.el.previousElementSibling;\n      if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\n        return;\n      }\n      return previousSibling;\n    };\n  }\n  connectedCallback() {\n    var _a;\n    const accordionGroupEl = (this.accordionGroupEl = (_a = this.el) === null || _a === void 0 ? void 0 : _a.closest('ion-accordion-group'));\n    if (accordionGroupEl) {\n      this.updateState(true);\n      addEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n  disconnectedCallback() {\n    const accordionGroupEl = this.accordionGroupEl;\n    if (accordionGroupEl) {\n      removeEventListener(accordionGroupEl, 'ionChange', this.updateListener);\n    }\n  }\n  componentDidLoad() {\n    this.setItemDefaults();\n    this.slotToggleIcon();\n    /**\n     * We need to wait a tick because we\n     * just set ionItem.button = true and\n     * the button has not have been rendered yet.\n     */\n    raf(() => {\n      /**\n       * Set aria label on button inside of ion-item\n       * once the inner content has been rendered.\n       */\n      const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n      this.setAria(expanded);\n    });\n  }\n  toggleExpanded() {\n    const { accordionGroupEl, value, state } = this;\n    if (accordionGroupEl) {\n      /**\n       * Because the accordion group may or may\n       * not allow multiple accordions open, we\n       * need to request the toggling of this\n       * accordion and the accordion group will\n       * make the decision on whether or not\n       * to allow it.\n       */\n      const expand = state === 1 /* Collapsed */ || state === 2 /* Collapsing */;\n      accordionGroupEl.requestAccordionToggle(value, expand);\n    }\n  }\n  render() {\n    const { disabled, readonly } = this;\n    const mode = getIonMode(this);\n    const expanded = this.state === 4 /* Expanded */ || this.state === 8 /* Expanding */;\n    const headerPart = expanded ? 'header expanded' : 'header';\n    const contentPart = expanded ? 'content expanded' : 'content';\n    this.setAria(expanded);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-expanding': this.state === 8 /* Expanding */,\n        'accordion-expanded': this.state === 4 /* Expanded */,\n        'accordion-collapsing': this.state === 2 /* Collapsing */,\n        'accordion-collapsed': this.state === 1 /* Collapsed */,\n        'accordion-next': this.isNext,\n        'accordion-previous': this.isPrevious,\n        'accordion-disabled': disabled,\n        'accordion-readonly': readonly,\n        'accordion-animated': config.getBoolean('animated', true),\n      } }, h(\"div\", { onClick: () => this.toggleExpanded(), id: \"header\", part: headerPart, \"aria-controls\": \"content\", ref: (headerEl) => (this.headerEl = headerEl) }, h(\"slot\", { name: \"header\" })), h(\"div\", { id: \"content\", part: contentPart, role: \"region\", \"aria-labelledby\": \"header\", ref: (contentEl) => (this.contentEl = contentEl) }, h(\"div\", { id: \"content-wrapper\", ref: (contentElWrapper) => (this.contentElWrapper = contentElWrapper) }, h(\"slot\", { name: \"content\" })))));\n  }\n  static get delegatesFocus() { return true; }\n  get el() { return this; }\n  static get style() { return {\n    ios: accordionIosCss,\n    md: accordionMdCss\n  }; }\n}, [49, \"ion-accordion\", {\n    \"value\": [1],\n    \"disabled\": [4],\n    \"readonly\": [4],\n    \"toggleIcon\": [1, \"toggle-icon\"],\n    \"toggleIconSlot\": [1, \"toggle-icon-slot\"],\n    \"state\": [32],\n    \"isNext\": [32],\n    \"isPrevious\": [32]\n  }]);\nlet accordionIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-accordion\", \"ion-icon\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-accordion\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Accordion);\n      }\n      break;\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        defineCustomElement$2();\n      }\n      break;\n  } });\n}\n\nconst IonAccordion = Accordion;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonAccordion, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}