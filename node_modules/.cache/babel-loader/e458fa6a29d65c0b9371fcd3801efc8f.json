{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { a as findClosestIonContent, g as getScrollElement } from './index8.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic.js';\nconst reorderGroupCss = \".reorder-list-active>*{-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\nconst ReorderGroup = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n    this.lastToIndex = -1;\n    this.cachedHeights = [];\n    this.scrollElTop = 0;\n    this.scrollElBottom = 0;\n    this.scrollElInitial = 0;\n    this.containerTop = 0;\n    this.containerBottom = 0;\n    this.state = 0\n    /* Idle */\n    ;\n    /**\n     * If `true`, the reorder will be hidden.\n     */\n\n    this.disabled = true;\n  }\n\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n\n  async connectedCallback() {\n    const contentEl = findClosestIonContent(this.el);\n\n    if (contentEl) {\n      this.scrollEl = await getScrollElement(contentEl);\n    }\n\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.el,\n      gestureName: 'reorder',\n      gesturePriority: 110,\n      threshold: 0,\n      direction: 'y',\n      passive: false,\n      canStart: detail => this.canStart(detail),\n      onStart: ev => this.onStart(ev),\n      onMove: ev => this.onMove(ev),\n      onEnd: () => this.onEnd()\n    });\n    this.disabledChanged();\n  }\n\n  disconnectedCallback() {\n    this.onEnd();\n\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n   *\n   * If a list of items is passed, the list will be reordered and returned in the\n   * proper order.\n   *\n   * If no parameters are passed or if `true` is passed in, the reorder will complete\n   * and the item will remain in the position it was dragged to. If `false` is passed,\n   * the reorder will complete and the item will bounce back to its original position.\n   *\n   * @param listOrReorder A list of items to be sorted and returned in the new order or a\n   * boolean of whether or not the reorder should reposition the item.\n   */\n\n\n  complete(listOrReorder) {\n    return Promise.resolve(this.completeSync(listOrReorder));\n  }\n\n  canStart(ev) {\n    if (this.selectedItemEl || this.state !== 0\n    /* Idle */\n    ) {\n      return false;\n    }\n\n    const target = ev.event.target;\n    const reorderEl = target.closest('ion-reorder');\n\n    if (!reorderEl) {\n      return false;\n    }\n\n    const item = findReorderItem(reorderEl, this.el);\n\n    if (!item) {\n      return false;\n    }\n\n    ev.data = item;\n    return true;\n  }\n\n  onStart(ev) {\n    ev.event.preventDefault();\n    const item = this.selectedItemEl = ev.data;\n    const heights = this.cachedHeights;\n    heights.length = 0;\n    const el = this.el;\n    const children = el.children;\n\n    if (!children || children.length === 0) {\n      return;\n    }\n\n    let sum = 0;\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      sum += child.offsetHeight;\n      heights.push(sum);\n      child.$ionIndex = i;\n    }\n\n    const box = el.getBoundingClientRect();\n    this.containerTop = box.top;\n    this.containerBottom = box.bottom;\n\n    if (this.scrollEl) {\n      const scrollBox = this.scrollEl.getBoundingClientRect();\n      this.scrollElInitial = this.scrollEl.scrollTop;\n      this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n      this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n    } else {\n      this.scrollElInitial = 0;\n      this.scrollElTop = 0;\n      this.scrollElBottom = 0;\n    }\n\n    this.lastToIndex = indexForItem(item);\n    this.selectedItemHeight = item.offsetHeight;\n    this.state = 1\n    /* Active */\n    ;\n    item.classList.add(ITEM_REORDER_SELECTED);\n    hapticSelectionStart();\n  }\n\n  onMove(ev) {\n    const selectedItem = this.selectedItemEl;\n\n    if (!selectedItem) {\n      return;\n    } // Scroll if we reach the scroll margins\n\n\n    const scroll = this.autoscroll(ev.currentY); // // Get coordinate\n\n    const top = this.containerTop - scroll;\n    const bottom = this.containerBottom - scroll;\n    const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n    const deltaY = scroll + currentY - ev.startY;\n    const normalizedY = currentY - top;\n    const toIndex = this.itemIndexForTop(normalizedY);\n\n    if (toIndex !== this.lastToIndex) {\n      const fromIndex = indexForItem(selectedItem);\n      this.lastToIndex = toIndex;\n      hapticSelectionChanged();\n      this.reorderMove(fromIndex, toIndex);\n    } // Update selected item position\n\n\n    selectedItem.style.transform = `translateY(${deltaY}px)`;\n  }\n\n  onEnd() {\n    const selectedItemEl = this.selectedItemEl;\n    this.state = 2\n    /* Complete */\n    ;\n\n    if (!selectedItemEl) {\n      this.state = 0\n      /* Idle */\n      ;\n      return;\n    }\n\n    const toIndex = this.lastToIndex;\n    const fromIndex = indexForItem(selectedItemEl);\n\n    if (toIndex === fromIndex) {\n      this.completeSync();\n    } else {\n      this.ionItemReorder.emit({\n        from: fromIndex,\n        to: toIndex,\n        complete: this.completeSync.bind(this)\n      });\n    }\n\n    hapticSelectionEnd();\n  }\n\n  completeSync(listOrReorder) {\n    const selectedItemEl = this.selectedItemEl;\n\n    if (selectedItemEl && this.state === 2\n    /* Complete */\n    ) {\n      const children = this.el.children;\n      const len = children.length;\n      const toIndex = this.lastToIndex;\n      const fromIndex = indexForItem(selectedItemEl);\n\n      if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\n        const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n        this.el.insertBefore(selectedItemEl, ref);\n      }\n\n      if (Array.isArray(listOrReorder)) {\n        listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n      }\n\n      for (let i = 0; i < len; i++) {\n        children[i].style['transform'] = '';\n      }\n\n      selectedItemEl.style.transition = '';\n      selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n      this.selectedItemEl = undefined;\n      this.state = 0\n      /* Idle */\n      ;\n    }\n\n    return listOrReorder;\n  }\n\n  itemIndexForTop(deltaY) {\n    const heights = this.cachedHeights; // TODO: since heights is a sorted array of integers, we can do\n    // speed up the search using binary search. Remember that linear-search is still\n    // faster than binary-search for small arrays (<64) due CPU branch misprediction.\n\n    for (let i = 0; i < heights.length; i++) {\n      if (heights[i] > deltaY) {\n        return i;\n      }\n    }\n\n    return heights.length - 1;\n  }\n  /********* DOM WRITE ********* */\n\n\n  reorderMove(fromIndex, toIndex) {\n    const itemHeight = this.selectedItemHeight;\n    const children = this.el.children;\n\n    for (let i = 0; i < children.length; i++) {\n      const style = children[i].style;\n      let value = '';\n\n      if (i > fromIndex && i <= toIndex) {\n        value = `translateY(${-itemHeight}px)`;\n      } else if (i < fromIndex && i >= toIndex) {\n        value = `translateY(${itemHeight}px)`;\n      }\n\n      style['transform'] = value;\n    }\n  }\n\n  autoscroll(posY) {\n    if (!this.scrollEl) {\n      return 0;\n    }\n\n    let amount = 0;\n\n    if (posY < this.scrollElTop) {\n      amount = -SCROLL_JUMP;\n    } else if (posY > this.scrollElBottom) {\n      amount = SCROLL_JUMP;\n    }\n\n    if (amount !== 0) {\n      this.scrollEl.scrollBy(0, amount);\n    }\n\n    return this.scrollEl.scrollTop - this.scrollElInitial;\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        'reorder-enabled': !this.disabled,\n        'reorder-list-active': this.state !== 0\n        /* Idle */\n\n      }\n    });\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n\n  static get style() {\n    return reorderGroupCss;\n  }\n\n}, [0, \"ion-reorder-group\", {\n  \"disabled\": [4],\n  \"state\": [32],\n  \"complete\": [64]\n}]);\n\nconst indexForItem = element => {\n  return element['$ionIndex'];\n};\n\nconst findReorderItem = (node, container) => {\n  let parent;\n\n  while (node) {\n    parent = node.parentElement;\n\n    if (parent === container) {\n      return node;\n    }\n\n    node = parent;\n  }\n\n  return undefined;\n};\n\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\n\nconst reorderArray = (array, from, to) => {\n  const element = array[from];\n  array.splice(from, 1);\n  array.splice(to, 0, element);\n  return array.slice();\n};\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-reorder-group\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-reorder-group\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, ReorderGroup);\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonReorderGroup = ReorderGroup;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonReorderGroup, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","h","Host","b","getIonMode","a","findClosestIonContent","g","getScrollElement","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","reorderGroupCss","ReorderGroup","constructor","__registerHost","ionItemReorder","lastToIndex","cachedHeights","scrollElTop","scrollElBottom","scrollElInitial","containerTop","containerBottom","state","disabled","disabledChanged","gesture","enable","connectedCallback","contentEl","el","scrollEl","createGesture","gestureName","gesturePriority","threshold","direction","passive","canStart","detail","onStart","ev","onMove","onEnd","disconnectedCallback","destroy","undefined","complete","listOrReorder","Promise","resolve","completeSync","selectedItemEl","target","event","reorderEl","closest","item","findReorderItem","data","preventDefault","heights","length","children","sum","i","child","offsetHeight","push","$ionIndex","box","getBoundingClientRect","top","bottom","scrollBox","scrollTop","AUTO_SCROLL_MARGIN","indexForItem","selectedItemHeight","classList","add","ITEM_REORDER_SELECTED","selectedItem","scroll","autoscroll","currentY","Math","max","min","deltaY","startY","normalizedY","toIndex","itemIndexForTop","fromIndex","reorderMove","style","transform","emit","from","to","bind","len","ref","insertBefore","Array","isArray","reorderArray","transition","remove","itemHeight","value","posY","amount","SCROLL_JUMP","scrollBy","render","mode","class","watchers","element","node","container","parent","parentElement","array","splice","slice","defineCustomElement$1","customElements","components","forEach","tagName","get","define","IonReorderGroup","defineCustomElement"],"sources":["C:/Users/steve/git/controlpad/node_modules/@ionic/core/components/ion-reorder-group.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { a as findClosestIonContent, g as getScrollElement } from './index8.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic.js';\n\nconst reorderGroupCss = \".reorder-list-active>*{-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\n\nconst ReorderGroup = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n    this.lastToIndex = -1;\n    this.cachedHeights = [];\n    this.scrollElTop = 0;\n    this.scrollElBottom = 0;\n    this.scrollElInitial = 0;\n    this.containerTop = 0;\n    this.containerBottom = 0;\n    this.state = 0 /* Idle */;\n    /**\n     * If `true`, the reorder will be hidden.\n     */\n    this.disabled = true;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async connectedCallback() {\n    const contentEl = findClosestIonContent(this.el);\n    if (contentEl) {\n      this.scrollEl = await getScrollElement(contentEl);\n    }\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.el,\n      gestureName: 'reorder',\n      gesturePriority: 110,\n      threshold: 0,\n      direction: 'y',\n      passive: false,\n      canStart: (detail) => this.canStart(detail),\n      onStart: (ev) => this.onStart(ev),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: () => this.onEnd(),\n    });\n    this.disabledChanged();\n  }\n  disconnectedCallback() {\n    this.onEnd();\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n   *\n   * If a list of items is passed, the list will be reordered and returned in the\n   * proper order.\n   *\n   * If no parameters are passed or if `true` is passed in, the reorder will complete\n   * and the item will remain in the position it was dragged to. If `false` is passed,\n   * the reorder will complete and the item will bounce back to its original position.\n   *\n   * @param listOrReorder A list of items to be sorted and returned in the new order or a\n   * boolean of whether or not the reorder should reposition the item.\n   */\n  complete(listOrReorder) {\n    return Promise.resolve(this.completeSync(listOrReorder));\n  }\n  canStart(ev) {\n    if (this.selectedItemEl || this.state !== 0 /* Idle */) {\n      return false;\n    }\n    const target = ev.event.target;\n    const reorderEl = target.closest('ion-reorder');\n    if (!reorderEl) {\n      return false;\n    }\n    const item = findReorderItem(reorderEl, this.el);\n    if (!item) {\n      return false;\n    }\n    ev.data = item;\n    return true;\n  }\n  onStart(ev) {\n    ev.event.preventDefault();\n    const item = (this.selectedItemEl = ev.data);\n    const heights = this.cachedHeights;\n    heights.length = 0;\n    const el = this.el;\n    const children = el.children;\n    if (!children || children.length === 0) {\n      return;\n    }\n    let sum = 0;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      sum += child.offsetHeight;\n      heights.push(sum);\n      child.$ionIndex = i;\n    }\n    const box = el.getBoundingClientRect();\n    this.containerTop = box.top;\n    this.containerBottom = box.bottom;\n    if (this.scrollEl) {\n      const scrollBox = this.scrollEl.getBoundingClientRect();\n      this.scrollElInitial = this.scrollEl.scrollTop;\n      this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n      this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n    }\n    else {\n      this.scrollElInitial = 0;\n      this.scrollElTop = 0;\n      this.scrollElBottom = 0;\n    }\n    this.lastToIndex = indexForItem(item);\n    this.selectedItemHeight = item.offsetHeight;\n    this.state = 1 /* Active */;\n    item.classList.add(ITEM_REORDER_SELECTED);\n    hapticSelectionStart();\n  }\n  onMove(ev) {\n    const selectedItem = this.selectedItemEl;\n    if (!selectedItem) {\n      return;\n    }\n    // Scroll if we reach the scroll margins\n    const scroll = this.autoscroll(ev.currentY);\n    // // Get coordinate\n    const top = this.containerTop - scroll;\n    const bottom = this.containerBottom - scroll;\n    const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n    const deltaY = scroll + currentY - ev.startY;\n    const normalizedY = currentY - top;\n    const toIndex = this.itemIndexForTop(normalizedY);\n    if (toIndex !== this.lastToIndex) {\n      const fromIndex = indexForItem(selectedItem);\n      this.lastToIndex = toIndex;\n      hapticSelectionChanged();\n      this.reorderMove(fromIndex, toIndex);\n    }\n    // Update selected item position\n    selectedItem.style.transform = `translateY(${deltaY}px)`;\n  }\n  onEnd() {\n    const selectedItemEl = this.selectedItemEl;\n    this.state = 2 /* Complete */;\n    if (!selectedItemEl) {\n      this.state = 0 /* Idle */;\n      return;\n    }\n    const toIndex = this.lastToIndex;\n    const fromIndex = indexForItem(selectedItemEl);\n    if (toIndex === fromIndex) {\n      this.completeSync();\n    }\n    else {\n      this.ionItemReorder.emit({\n        from: fromIndex,\n        to: toIndex,\n        complete: this.completeSync.bind(this),\n      });\n    }\n    hapticSelectionEnd();\n  }\n  completeSync(listOrReorder) {\n    const selectedItemEl = this.selectedItemEl;\n    if (selectedItemEl && this.state === 2 /* Complete */) {\n      const children = this.el.children;\n      const len = children.length;\n      const toIndex = this.lastToIndex;\n      const fromIndex = indexForItem(selectedItemEl);\n      if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\n        const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n        this.el.insertBefore(selectedItemEl, ref);\n      }\n      if (Array.isArray(listOrReorder)) {\n        listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n      }\n      for (let i = 0; i < len; i++) {\n        children[i].style['transform'] = '';\n      }\n      selectedItemEl.style.transition = '';\n      selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n      this.selectedItemEl = undefined;\n      this.state = 0 /* Idle */;\n    }\n    return listOrReorder;\n  }\n  itemIndexForTop(deltaY) {\n    const heights = this.cachedHeights;\n    // TODO: since heights is a sorted array of integers, we can do\n    // speed up the search using binary search. Remember that linear-search is still\n    // faster than binary-search for small arrays (<64) due CPU branch misprediction.\n    for (let i = 0; i < heights.length; i++) {\n      if (heights[i] > deltaY) {\n        return i;\n      }\n    }\n    return heights.length - 1;\n  }\n  /********* DOM WRITE ********* */\n  reorderMove(fromIndex, toIndex) {\n    const itemHeight = this.selectedItemHeight;\n    const children = this.el.children;\n    for (let i = 0; i < children.length; i++) {\n      const style = children[i].style;\n      let value = '';\n      if (i > fromIndex && i <= toIndex) {\n        value = `translateY(${-itemHeight}px)`;\n      }\n      else if (i < fromIndex && i >= toIndex) {\n        value = `translateY(${itemHeight}px)`;\n      }\n      style['transform'] = value;\n    }\n  }\n  autoscroll(posY) {\n    if (!this.scrollEl) {\n      return 0;\n    }\n    let amount = 0;\n    if (posY < this.scrollElTop) {\n      amount = -SCROLL_JUMP;\n    }\n    else if (posY > this.scrollElBottom) {\n      amount = SCROLL_JUMP;\n    }\n    if (amount !== 0) {\n      this.scrollEl.scrollBy(0, amount);\n    }\n    return this.scrollEl.scrollTop - this.scrollElInitial;\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'reorder-enabled': !this.disabled,\n        'reorder-list-active': this.state !== 0 /* Idle */,\n      } }));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return reorderGroupCss; }\n}, [0, \"ion-reorder-group\", {\n    \"disabled\": [4],\n    \"state\": [32],\n    \"complete\": [64]\n  }]);\nconst indexForItem = (element) => {\n  return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n  let parent;\n  while (node) {\n    parent = node.parentElement;\n    if (parent === container) {\n      return node;\n    }\n    node = parent;\n  }\n  return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n  const element = array[from];\n  array.splice(from, 1);\n  array.splice(to, 0, element);\n  return array.slice();\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-reorder-group\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-reorder-group\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, ReorderGroup);\n      }\n      break;\n  } });\n}\n\nconst IonReorderGroup = ReorderGroup;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonReorderGroup, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}