{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { d as getAriaLabel, e as renderHiddenInput } from './helpers.js';\nimport { c as createColorClasses, h as hostContext } from './theme.js';\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\nconst Checkbox = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.__attachShadow();\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n\n    this.disabled = false;\n    /**\n     * The value of the checkbox does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\n     * it's only used when the checkbox participates in a native `<form>`.\n     */\n\n    this.value = 'on';\n\n    this.onClick = ev => {\n      ev.preventDefault();\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n\n  componentWillLoad() {\n    this.emitStyle();\n  }\n\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n    this.emitStyle();\n  }\n\n  disabledChanged() {\n    this.emitStyle();\n  }\n\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled\n    });\n  }\n\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n\n  render() {\n    const {\n      color,\n      checked,\n      disabled,\n      el,\n      indeterminate,\n      inputId,\n      name,\n      value\n    } = this;\n    const mode = getIonMode(this);\n    const {\n      label,\n      labelId,\n      labelText\n    } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, checked ? value : '', disabled);\n    let path = indeterminate ? h(\"path\", {\n      d: \"M6 12L18 12\",\n      part: \"mark\"\n    }) : h(\"path\", {\n      d: \"M5.9,12.5l3.8,3.8l8.8-8.8\",\n      part: \"mark\"\n    });\n\n    if (mode === 'md') {\n      path = indeterminate ? h(\"path\", {\n        d: \"M2 12H22\",\n        part: \"mark\"\n      }) : h(\"path\", {\n        d: \"M1.73,12.91 8.1,19.28 22.79,4.59\",\n        part: \"mark\"\n      });\n    }\n\n    return h(Host, {\n      onClick: this.onClick,\n      \"aria-labelledby\": label ? labelId : null,\n      \"aria-checked\": `${checked}`,\n      \"aria-hidden\": disabled ? 'true' : null,\n      role: \"checkbox\",\n      class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        interactive: true\n      })\n    }, h(\"svg\", {\n      class: \"checkbox-icon\",\n      viewBox: \"0 0 24 24\",\n      part: \"container\"\n    }, path), h(\"label\", {\n      htmlFor: inputId\n    }, labelText), h(\"input\", {\n      type: \"checkbox\",\n      \"aria-checked\": `${checked}`,\n      disabled: disabled,\n      id: inputId,\n      onFocus: () => this.onFocus(),\n      onBlur: () => this.onBlur(),\n      ref: focusEl => this.focusEl = focusEl\n    }));\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"checked\": [\"checkedChanged\"],\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n\n  static get style() {\n    return {\n      ios: checkboxIosCss,\n      md: checkboxMdCss\n    };\n  }\n\n}, [33, \"ion-checkbox\", {\n  \"color\": [513],\n  \"name\": [1],\n  \"checked\": [1028],\n  \"indeterminate\": [1028],\n  \"disabled\": [4],\n  \"value\": [8]\n}]);\nlet checkboxIds = 0;\n\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-checkbox\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-checkbox\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Checkbox);\n        }\n\n        break;\n    }\n  });\n}\n\nexport { Checkbox as C, defineCustomElement as d };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","h","Host","b","getIonMode","d","getAriaLabel","e","renderHiddenInput","c","createColorClasses","hostContext","checkboxIosCss","checkboxMdCss","Checkbox","constructor","__registerHost","__attachShadow","ionChange","ionFocus","ionBlur","ionStyle","inputId","checkboxIds","name","checked","indeterminate","disabled","value","onClick","ev","preventDefault","setFocus","onFocus","emit","onBlur","componentWillLoad","emitStyle","checkedChanged","isChecked","disabledChanged","focusEl","focus","render","color","el","mode","label","labelId","labelText","path","part","role","class","interactive","viewBox","htmlFor","type","id","ref","watchers","style","ios","md","defineCustomElement","customElements","components","forEach","tagName","get","define","C"],"sources":["C:/Users/steve/git/controlpad/node_modules/@ionic/core/components/checkbox.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { d as getAriaLabel, e as renderHiddenInput } from './helpers.js';\nimport { c as createColorClasses, h as hostContext } from './theme.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Checkbox = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n    this.disabled = false;\n    /**\n     * The value of the checkbox does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\n     * it's only used when the checkbox participates in a native `<form>`.\n     */\n    this.value = 'on';\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value,\n    });\n    this.emitStyle();\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  render() {\n    const { color, checked, disabled, el, indeterminate, inputId, name, value } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, checked ? value : '', disabled);\n    let path = indeterminate ? (h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })) : (h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" }));\n    if (mode === 'md') {\n      path = indeterminate ? (h(\"path\", { d: \"M2 12H22\", part: \"mark\" })) : (h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" }));\n    }\n    return (h(Host, { onClick: this.onClick, \"aria-labelledby\": label ? labelId : null, \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, role: \"checkbox\", class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        interactive: true,\n      }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"checkbox\", \"aria-checked\": `${checked}`, disabled: disabled, id: inputId, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) })));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return {\n    ios: checkboxIosCss,\n    md: checkboxMdCss\n  }; }\n}, [33, \"ion-checkbox\", {\n    \"color\": [513],\n    \"name\": [1],\n    \"checked\": [1028],\n    \"indeterminate\": [1028],\n    \"disabled\": [4],\n    \"value\": [8]\n  }]);\nlet checkboxIds = 0;\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-checkbox\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-checkbox\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Checkbox);\n      }\n      break;\n  } });\n}\n\nexport { Checkbox as C, defineCustomElement as d };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}