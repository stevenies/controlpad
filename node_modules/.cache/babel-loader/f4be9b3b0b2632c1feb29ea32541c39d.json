{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\git\\\\controlpad\\\\src\\\\components\\\\CPTextField.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { IonItem, IonLabel, IonInput, IonTextarea } from '@ionic/react';\nimport { AppContext } from '../State.jsx';\n/**\r\n\tUI component displaying one or more lines of text.\r\n\tProps:\r\n\t\t* id:\t      Mnemonic used to refer the button control.\r\n\t\t* multiline:  (Optional) True if the text field can display multiple lines of text.  Default = false.\r\n\t\t* rows:\t\t  (Optional) Number of rows to display simultaneously within a multiline component.  Default = 1.\r\n\t\t* editable:   (Optional) True if the user can edit the text; false if the text is only for display.  Default = false.\r\n\tState:\r\n\t\t* value:\t Text displayed with the TextField component.\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CPTextField(props) {\n  _s();\n\n  const multiline = props.multiline == \"true\";\n  const rows = props.rows ? props.rows : 1;\n  const editable = props.editable == \"true\";\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const value = state.controls[props.id].value;\n  const labelStyle = {\n    \"padding-right\": \"8px\"\n  };\n  const displayStyle = {};\n  const editableStyle = {\n    border: \"1px solid black\"\n  }; // Create a callback function that dispatches a command indicating the button was clicked.\n\n  const saveEdits = value => {\n    if (props.editable) {\n      dispatch({\n        id: props.id,\n        fields: {\n          value: value\n        },\n        updateServer: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonItem, {\n    lines: \"none\",\n    children: [/*#__PURE__*/_jsxDEV(IonLabel, {\n      style: labelStyle,\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), multiline ? /*#__PURE__*/_jsxDEV(IonTextarea, {\n      value: value,\n      readonly: !editable,\n      rows: rows,\n      onIonChange: e => saveEdits(e.detail.value),\n      style: editable ? editableStyle : displayStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(IonInput, {\n      value: value,\n      readonly: !editable,\n      onIonChange: e => saveEdits(e.detail.value),\n      style: editable ? editableStyle : displayStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CPTextField, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\n\n_c = CPTextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"CPTextField\");","map":{"version":3,"names":["React","useContext","IonItem","IonLabel","IonInput","IonTextarea","AppContext","CPTextField","props","multiline","rows","editable","state","dispatch","value","controls","id","labelStyle","displayStyle","editableStyle","border","saveEdits","fields","updateServer","e","detail"],"sources":["C:/Users/steve/git/controlpad/src/components/CPTextField.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { IonItem, IonLabel, IonInput, IonTextarea } from '@ionic/react';\r\nimport { AppContext} from '../State.jsx';\r\n\r\n/**\r\n\tUI component displaying one or more lines of text.\r\n\tProps:\r\n\t\t* id:\t      Mnemonic used to refer the button control.\r\n\t\t* multiline:  (Optional) True if the text field can display multiple lines of text.  Default = false.\r\n\t\t* rows:\t\t  (Optional) Number of rows to display simultaneously within a multiline component.  Default = 1.\r\n\t\t* editable:   (Optional) True if the user can edit the text; false if the text is only for display.  Default = false.\r\n\tState:\r\n\t\t* value:\t Text displayed with the TextField component.\r\n*/\r\nexport function CPTextField(props) {\r\n\r\n\tconst multiline = props.multiline == \"true\";\r\n\tconst rows = props.rows ? props.rows : 1;\r\n\tconst editable = props.editable == \"true\";\r\n\r\n\tconst { state, dispatch } = useContext(AppContext);\r\n\tconst value = state.controls[props.id].value;\r\n\t\r\n\tconst labelStyle = { \"padding-right\": \"8px\" };\r\n\tconst displayStyle = { };\r\n\tconst editableStyle = { border: \"1px solid black\" };\r\n\r\n\t// Create a callback function that dispatches a command indicating the button was clicked.\r\n\tconst saveEdits = (value) => {\r\n\t\tif (props.editable) {\r\n\t\t\tdispatch({ id: props.id, fields: { value: value }, updateServer: true });\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonItem lines=\"none\">\r\n\t\t\t<IonLabel style={labelStyle}>{props.id}</IonLabel>\r\n\t\t\t{multiline\r\n            \t? (<IonTextarea value={value} readonly={!editable} rows={rows} onIonChange={e => saveEdits(e.detail.value)} style={editable ? editableStyle : displayStyle}></IonTextarea>)\r\n            \t: (<IonInput value={value} readonly={!editable} onIonChange={e => saveEdits(e.detail.value)} style={editable ? editableStyle : displayStyle}></IonInput>)\r\n\t\t\t}\r\n\t\t</IonItem>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCC,WAAtC,QAAyD,cAAzD;AACA,SAASC,UAAT,QAA0B,cAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EAElC,MAAMC,SAAS,GAAGD,KAAK,CAACC,SAAN,IAAmB,MAArC;EACA,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACE,IAAnB,GAA0B,CAAvC;EACA,MAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAN,IAAkB,MAAnC;EAEA,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBZ,UAAU,CAACK,UAAD,CAAtC;EACA,MAAMQ,KAAK,GAAGF,KAAK,CAACG,QAAN,CAAeP,KAAK,CAACQ,EAArB,EAAyBF,KAAvC;EAEA,MAAMG,UAAU,GAAG;IAAE,iBAAiB;EAAnB,CAAnB;EACA,MAAMC,YAAY,GAAG,EAArB;EACA,MAAMC,aAAa,GAAG;IAAEC,MAAM,EAAE;EAAV,CAAtB,CAXkC,CAalC;;EACA,MAAMC,SAAS,GAAIP,KAAD,IAAW;IAC5B,IAAIN,KAAK,CAACG,QAAV,EAAoB;MACnBE,QAAQ,CAAC;QAAEG,EAAE,EAAER,KAAK,CAACQ,EAAZ;QAAgBM,MAAM,EAAE;UAAER,KAAK,EAAEA;QAAT,CAAxB;QAA0CS,YAAY,EAAE;MAAxD,CAAD,CAAR;IACA;EACD,CAJD;;EAMA,oBACC,QAAC,OAAD;IAAS,KAAK,EAAC,MAAf;IAAA,wBACC,QAAC,QAAD;MAAU,KAAK,EAAEN,UAAjB;MAAA,UAA8BT,KAAK,CAACQ;IAApC;MAAA;MAAA;MAAA;IAAA,QADD,EAEEP,SAAS,gBACG,QAAC,WAAD;MAAa,KAAK,EAAEK,KAApB;MAA2B,QAAQ,EAAE,CAACH,QAAtC;MAAgD,IAAI,EAAED,IAAtD;MAA4D,WAAW,EAAEc,CAAC,IAAIH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASX,KAAV,CAAvF;MAAyG,KAAK,EAAEH,QAAQ,GAAGQ,aAAH,GAAmBD;IAA3I;MAAA;MAAA;MAAA;IAAA,QADH,gBAEG,QAAC,QAAD;MAAU,KAAK,EAAEJ,KAAjB;MAAwB,QAAQ,EAAE,CAACH,QAAnC;MAA6C,WAAW,EAAEa,CAAC,IAAIH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASX,KAAV,CAAxE;MAA0F,KAAK,EAAEH,QAAQ,GAAGQ,aAAH,GAAmBD;IAA5H;MAAA;MAAA;MAAA;IAAA,QAJd;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AASA;;GA7BeX,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}