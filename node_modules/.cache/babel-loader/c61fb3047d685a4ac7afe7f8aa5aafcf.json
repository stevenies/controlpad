{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\git\\\\controlpad\\\\src\\\\components\\\\CPSlider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { IonRange, IonLabel } from '@ionic/react';\nimport { AppContext } from '../State.jsx';\n/**\r\n\tUI component for selecting a value from a possible range of values.\r\n\tProps:\r\n\t\t* id:\t\t Mnemonic used to refer the motor control.\r\n\t\t* minValue:  (Optional) Slider lower range value; default = 0.\r\n\t\t* maxValue:  (Optional) Slider maximum range value; default = 100.\r\n\tState:\r\n\t\t* value:\t Currently selected range value.\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CPSlider(props) {\n  _s();\n\n  const minValue = props.minValue ? props.minValue : 0;\n  const maxValue = props.maxValue ? props.maxValue : 100;\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const value = state.controls[props.id].value;\n  const styledIonRange = {\n    \"--bar-height\": \"8px\",\n    \"--bar-border-radius\": \"8px\",\n    \"--bar-background\": \"#e8e8e8\",\n    \"--bar-background-active\": \"#e8e8e8\",\n    \"--knob-background\": \"darkblue\",\n    \"--knob-size\": \"30px\",\n    \"--pin-background\": \"#ffafcc\",\n    \"--pin-color\": \"#fff\"\n  }; // Create a callback function that dispatches a command to update the slider's current value.\n\n  const setMotorSpeed = value => {\n    dispatch({\n      id: props.id,\n      fields: {\n        value: value\n      },\n      updateServer: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonRange, {\n    min: minValue,\n    max: maxValue,\n    debounce: 100,\n    value: value,\n    onIonChange: e => setMotorSpeed(e.detail.value),\n    style: styledIonRange,\n    children: /*#__PURE__*/_jsxDEV(IonLabel, {\n      slot: \"start\",\n      children: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CPSlider, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\n\n_c = CPSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CPSlider\");","map":{"version":3,"names":["React","useContext","IonRange","IonLabel","AppContext","CPSlider","props","minValue","maxValue","state","dispatch","value","controls","id","styledIonRange","setMotorSpeed","fields","updateServer","e","detail"],"sources":["C:/Users/steve/git/controlpad/src/components/CPSlider.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { IonRange, IonLabel } from '@ionic/react';\r\nimport { AppContext} from '../State.jsx';\r\n\r\n/**\r\n\tUI component for selecting a value from a possible range of values.\r\n\tProps:\r\n\t\t* id:\t\t Mnemonic used to refer the motor control.\r\n\t\t* minValue:  (Optional) Slider lower range value; default = 0.\r\n\t\t* maxValue:  (Optional) Slider maximum range value; default = 100.\r\n\tState:\r\n\t\t* value:\t Currently selected range value.\r\n */\r\nexport function CPSlider(props) {\r\n\r\n\tconst minValue = props.minValue ? props.minValue : 0;\r\n\tconst maxValue = props.maxValue ? props.maxValue : 100;\r\n\r\n\tconst { state, dispatch } = useContext(AppContext);\r\n\tconst value = state.controls[props.id].value;\r\n\r\n\tconst styledIonRange = {\r\n\t\t\"--bar-height\": \"8px\",\r\n\t\t\"--bar-border-radius\": \"8px\",\r\n\t\t\"--bar-background\": \"#e8e8e8\",\r\n\t\t\"--bar-background-active\": \"#e8e8e8\",\r\n\t\t\"--knob-background\": \"darkblue\",\r\n\t\t\"--knob-size\": \"30px\",\r\n\t\t\"--pin-background\": \"#ffafcc\",\r\n\t\t\"--pin-color\": \"#fff\"\r\n\t};\r\n\r\n\t// Create a callback function that dispatches a command to update the slider's current value.\r\n\tconst setMotorSpeed = (value) => {\r\n\t\tdispatch({ id: props.id, fields: { value: value }, updateServer: true });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IonRange min={minValue} max={maxValue} debounce={100} value={value} onIonChange={e => setMotorSpeed(e.detail.value)} style={styledIonRange} >\r\n\t\t\t<IonLabel slot=\"start\">{props.id}</IonLabel>\r\n\t\t</IonRange>\r\n    );\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AACA,SAASC,UAAT,QAA0B,cAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAE/B,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAN,GAAiBD,KAAK,CAACC,QAAvB,GAAkC,CAAnD;EACA,MAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAN,GAAiBF,KAAK,CAACE,QAAvB,GAAkC,GAAnD;EAEA,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBT,UAAU,CAACG,UAAD,CAAtC;EACA,MAAMO,KAAK,GAAGF,KAAK,CAACG,QAAN,CAAeN,KAAK,CAACO,EAArB,EAAyBF,KAAvC;EAEA,MAAMG,cAAc,GAAG;IACtB,gBAAgB,KADM;IAEtB,uBAAuB,KAFD;IAGtB,oBAAoB,SAHE;IAItB,2BAA2B,SAJL;IAKtB,qBAAqB,UALC;IAMtB,eAAe,MANO;IAOtB,oBAAoB,SAPE;IAQtB,eAAe;EARO,CAAvB,CAR+B,CAmB/B;;EACA,MAAMC,aAAa,GAAIJ,KAAD,IAAW;IAChCD,QAAQ,CAAC;MAAEG,EAAE,EAAEP,KAAK,CAACO,EAAZ;MAAgBG,MAAM,EAAE;QAAEL,KAAK,EAAEA;MAAT,CAAxB;MAA0CM,YAAY,EAAE;IAAxD,CAAD,CAAR;EACA,CAFD;;EAIA,oBACC,QAAC,QAAD;IAAU,GAAG,EAAEV,QAAf;IAAyB,GAAG,EAAEC,QAA9B;IAAwC,QAAQ,EAAE,GAAlD;IAAuD,KAAK,EAAEG,KAA9D;IAAqE,WAAW,EAAEO,CAAC,IAAIH,aAAa,CAACG,CAAC,CAACC,MAAF,CAASR,KAAV,CAApG;IAAsH,KAAK,EAAEG,cAA7H;IAAA,uBACC,QAAC,QAAD;MAAU,IAAI,EAAC,OAAf;MAAA,UAAwBR,KAAK,CAACO;IAA9B;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAKA;;GA7BeR,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}