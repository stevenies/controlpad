{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\git\\\\controlpad\\\\src\\\\pages\\\\Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport { connectServer, disconnectServer } from \"../websockets.js\";\nimport { AppContext } from '../State';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext); // Establish a STOMP network connection to the ControlPad server.  Note that the useEffect function specifies an empty array\n  // so that the connection is established only when the component is first mounted and then later disconnected when the component\n  // is unmounted.  Changes in the component's intermediate state are ignored.\n\n  useEffect(() => {\n    connectServer('192.168.7.10', dispatch);\n    return disconnectServer;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonTitle, {\n          children: \"Control Pad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      fullscreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"tMjQDhNvN1vDEz7QS76YEprP+qA=\");\n\n_c = Home;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useContext","useEffect","IonContent","IonHeader","IonPage","IonTitle","IonToolbar","connectServer","disconnectServer","AppContext","Home","state","dispatch"],"sources":["C:/Users/steve/git/controlpad/src/pages/Home.tsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport { connectServer, disconnectServer } from \"../websockets.js\";\nimport { AppContext } from '../State';\nimport { CPButton } from '../components/CPButton.jsx';\nimport { CPLight } from '../components/CPLight.jsx';\nimport { CPMotor } from '../components/CPMotor.jsx';\nimport { CPSlider } from '../components/CPSlider.jsx';\nimport { CPTextField } from '../components/CPTextField.jsx';\nimport { CPToggle } from '../components/CPToggle.jsx';\n\nexport function Home() {\n\n\tconst { state, dispatch } = useContext(AppContext);\n\n\t// Establish a STOMP network connection to the ControlPad server.  Note that the useEffect function specifies an empty array\n\t// so that the connection is established only when the component is first mounted and then later disconnected when the component\n\t// is unmounted.  Changes in the component's intermediate state are ignored.\n\tuseEffect(() => {\n\t\tconnectServer('192.168.7.10', dispatch);\n\t\treturn disconnectServer;\n\t}, []);\n\t\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Control Pad</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n     </IonContent>\n    </IonPage>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,OAAhC,EAAyCC,QAAzC,EAAmDC,UAAnD,QAAqE,cAArE;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,kBAAhD;AACA,SAASC,UAAT,QAA2B,UAA3B;;AAQA,OAAO,SAASC,IAAT,GAAgB;EAAA;;EAEtB,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAsBZ,UAAU,CAACS,UAAD,CAAtC,CAFsB,CAItB;EACA;EACA;;EACAR,SAAS,CAAC,MAAM;IACfM,aAAa,CAAC,cAAD,EAAiBK,QAAjB,CAAb;IACA,OAAOJ,gBAAP;EACA,CAHQ,EAGN,EAHM,CAAT;EAKC,oBACE,QAAC,OAAD;IAAA,wBACE,QAAC,SAAD;MAAA,uBACE,QAAC,UAAD;QAAA,uBACE,QAAC,QAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME,QAAC,UAAD;MAAY,UAAU;IAAtB;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAvBeE,I;;KAAAA,I;AAuBf"},"metadata":{},"sourceType":"module"}