{"ast":null,"code":"import { proxyCustomElement, HTMLElement, Build, h, Host } from '@stencil/core/internal/client';\nimport { i as isStr, b as inheritAttributes, g as getUrl, c as getName } from './utils.js';\n\nconst validateContent = svgContent => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent; // setup this way to ensure it works on our buddy IE\n\n  for (let i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  } // must only have 1 root element\n\n\n  const svgElm = div.firstElementChild;\n\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    const svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim()); // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n\n  return '';\n};\n\nconst isValid = elm => {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const val = elm.attributes[i].value;\n\n      if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst ioniconContent = new Map();\nconst requests = new Map();\n\nconst getSvgContent = (url, sanitize) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      // we don't already have a request\n      req = fetch(url).then(rsp => {\n        if (rsp.ok) {\n          return rsp.text().then(svgContent => {\n            if (svgContent && sanitize !== false) {\n              svgContent = validateContent(svgContent);\n            }\n\n            ioniconContent.set(url, svgContent || '');\n          });\n        }\n\n        ioniconContent.set(url, '');\n      }); // cache for the same requests\n\n      requests.set(url, req);\n    } else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n\n  return req;\n};\n\nconst iconCss = \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box !important;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:32px;stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}:host(.flip-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.icon-small){font-size:18px !important}:host(.icon-large){font-size:32px !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}\";\nconst Icon = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.__attachShadow();\n\n    this.iconName = null;\n    this.inheritedAttributes = {};\n    this.isVisible = false;\n    /**\n     * The mode determines which platform styles to use.\n     */\n\n    this.mode = getIonMode();\n    /**\n     * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n     * Default, `false`.\n     */\n\n    this.lazy = false;\n    /**\n     * When set to `false`, SVG content that is HTTP fetched will not be checked\n     * if the response SVG content has any `<script>` elements, or any attributes\n     * that start with `on`, such as `onclick`.\n     * @default true\n     */\n\n    this.sanitize = true;\n\n    this.hasAriaHidden = () => {\n      const {\n        el\n      } = this;\n      return el.hasAttribute('aria-hidden') && el.getAttribute('aria-hidden') === 'true';\n    };\n  }\n\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '50px', () => {\n      this.isVisible = true;\n      this.loadIcon();\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n\n  waitUntilVisible(el, rootMargin, cb) {\n    if (Build.isBrowser && this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = this.io = new window.IntersectionObserver(data => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, {\n        rootMargin\n      });\n      io.observe(el);\n    } else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n\n  loadIcon() {\n    if (Build.isBrowser && this.isVisible) {\n      const url = getUrl(this);\n\n      if (url) {\n        if (ioniconContent.has(url)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url);\n        } else {\n          // async if it hasn't been loaded\n          getSvgContent(url, this.sanitize).then(() => this.svgContent = ioniconContent.get(url));\n        }\n      }\n    }\n\n    const label = this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md);\n    /**\n     * Come up with a default label\n     * in case user does not provide their own.\n     */\n\n    if (label) {\n      this.ariaLabel = label.replace(/\\-/g, ' ');\n    }\n  }\n\n  render() {\n    const {\n      iconName,\n      ariaLabel,\n      inheritedAttributes\n    } = this;\n    const mode = this.mode || 'md';\n    const flipRtl = this.flipRtl || iconName && (iconName.indexOf('arrow') > -1 || iconName.indexOf('chevron') > -1) && this.flipRtl !== false;\n    /**\n     * Only set the aria-label if a) we have generated\n     * one for the icon and if aria-hidden is not set to \"true\".\n     * If developer wants to set their own aria-label, then\n     * inheritedAttributes down below will override whatever\n     * default label we have set.\n     */\n\n    return h(Host, Object.assign({\n      \"aria-label\": ariaLabel !== undefined && !this.hasAriaHidden() ? ariaLabel : null,\n      role: \"img\",\n      class: Object.assign(Object.assign({\n        [mode]: true\n      }, createColorClasses(this.color)), {\n        [`icon-${this.size}`]: !!this.size,\n        'flip-rtl': !!flipRtl && this.el.ownerDocument.dir === 'rtl'\n      })\n    }, inheritedAttributes), Build.isBrowser && this.svgContent ? h(\"div\", {\n      class: \"icon-inner\",\n      innerHTML: this.svgContent\n    }) : h(\"div\", {\n      class: \"icon-inner\"\n    }));\n  }\n\n  static get assetsDirs() {\n    return [\"svg\"];\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"name\": [\"loadIcon\"],\n      \"src\": [\"loadIcon\"],\n      \"icon\": [\"loadIcon\"]\n    };\n  }\n\n  static get style() {\n    return iconCss;\n  }\n\n}, [1, \"ion-icon\", {\n  \"mode\": [1025],\n  \"color\": [1],\n  \"ios\": [1],\n  \"md\": [1],\n  \"flipRtl\": [4, \"flip-rtl\"],\n  \"name\": [513],\n  \"src\": [1],\n  \"icon\": [8],\n  \"size\": [1],\n  \"lazy\": [4],\n  \"sanitize\": [4],\n  \"svgContent\": [32],\n  \"isVisible\": [32],\n  \"ariaLabel\": [32]\n}]);\n\nconst getIonMode = () => Build.isBrowser && typeof document !== 'undefined' && document.documentElement.getAttribute('mode') || 'md';\n\nconst createColorClasses = color => {\n  return color ? {\n    'ion-color': true,\n    [`ion-color-${color}`]: true\n  } : null;\n};\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-icon\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Icon);\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonIcon = Icon;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonIcon, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","Build","h","Host","i","isStr","b","inheritAttributes","g","getUrl","c","getName","validateContent","svgContent","div","document","createElement","innerHTML","childNodes","length","nodeName","toLowerCase","removeChild","svgElm","firstElementChild","svgClass","getAttribute","setAttribute","trim","isValid","elm","nodeType","attributes","val","value","indexOf","ioniconContent","Map","requests","getSvgContent","url","sanitize","req","get","fetch","then","rsp","ok","text","set","Promise","resolve","iconCss","Icon","constructor","__registerHost","__attachShadow","iconName","inheritedAttributes","isVisible","mode","getIonMode","lazy","hasAriaHidden","el","hasAttribute","componentWillLoad","connectedCallback","waitUntilVisible","loadIcon","disconnectedCallback","io","disconnect","undefined","rootMargin","cb","isBrowser","window","IntersectionObserver","data","isIntersecting","observe","has","label","name","icon","ios","md","ariaLabel","replace","render","flipRtl","Object","assign","role","class","createColorClasses","color","size","ownerDocument","dir","assetsDirs","watchers","style","documentElement","defineCustomElement$1","customElements","components","forEach","tagName","define","IonIcon","defineCustomElement"],"sources":["C:/Users/steve/git/controlpad/node_modules/@ionic/react/node_modules/ionicons/components/ion-icon.js"],"sourcesContent":["import { proxyCustomElement, HTMLElement, Build, h, Host } from '@stencil/core/internal/client';\nimport { i as isStr, b as inheritAttributes, g as getUrl, c as getName } from './utils.js';\n\nconst validateContent = (svgContent) => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent;\n  // setup this way to ensure it works on our buddy IE\n  for (let i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  }\n  // must only have 1 root element\n  const svgElm = div.firstElementChild;\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    const svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n    // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n  return '';\n};\nconst isValid = (elm) => {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const val = elm.attributes[i].value;\n      if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nconst ioniconContent = new Map();\nconst requests = new Map();\nconst getSvgContent = (url, sanitize) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      // we don't already have a request\n      req = fetch(url).then((rsp) => {\n        if (rsp.ok) {\n          return rsp.text().then((svgContent) => {\n            if (svgContent && sanitize !== false) {\n              svgContent = validateContent(svgContent);\n            }\n            ioniconContent.set(url, svgContent || '');\n          });\n        }\n        ioniconContent.set(url, '');\n      });\n      // cache for the same requests\n      requests.set(url, req);\n    }\n    else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n  return req;\n};\n\nconst iconCss = \":host{display:inline-block;width:1em;height:1em;contain:strict;fill:currentColor;-webkit-box-sizing:content-box !important;box-sizing:content-box !important}:host .ionicon{stroke:currentColor}.ionicon-fill-none{fill:none}.ionicon-stroke-width{stroke-width:32px;stroke-width:var(--ionicon-stroke-width, 32px)}.icon-inner,.ionicon,svg{display:block;height:100%;width:100%}:host(.flip-rtl) .icon-inner{-webkit-transform:scaleX(-1);transform:scaleX(-1)}:host(.icon-small){font-size:18px !important}:host(.icon-large){font-size:32px !important}:host(.ion-color){color:var(--ion-color-base) !important}:host(.ion-color-primary){--ion-color-base:var(--ion-color-primary, #3880ff)}:host(.ion-color-secondary){--ion-color-base:var(--ion-color-secondary, #0cd1e8)}:host(.ion-color-tertiary){--ion-color-base:var(--ion-color-tertiary, #f4a942)}:host(.ion-color-success){--ion-color-base:var(--ion-color-success, #10dc60)}:host(.ion-color-warning){--ion-color-base:var(--ion-color-warning, #ffce00)}:host(.ion-color-danger){--ion-color-base:var(--ion-color-danger, #f14141)}:host(.ion-color-light){--ion-color-base:var(--ion-color-light, #f4f5f8)}:host(.ion-color-medium){--ion-color-base:var(--ion-color-medium, #989aa2)}:host(.ion-color-dark){--ion-color-base:var(--ion-color-dark, #222428)}\";\n\nconst Icon = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.iconName = null;\n    this.inheritedAttributes = {};\n    this.isVisible = false;\n    /**\n     * The mode determines which platform styles to use.\n     */\n    this.mode = getIonMode();\n    /**\n     * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n     * Default, `false`.\n     */\n    this.lazy = false;\n    /**\n     * When set to `false`, SVG content that is HTTP fetched will not be checked\n     * if the response SVG content has any `<script>` elements, or any attributes\n     * that start with `on`, such as `onclick`.\n     * @default true\n     */\n    this.sanitize = true;\n    this.hasAriaHidden = () => {\n      const { el } = this;\n      return el.hasAttribute('aria-hidden') && el.getAttribute('aria-hidden') === 'true';\n    };\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '50px', () => {\n      this.isVisible = true;\n      this.loadIcon();\n    });\n  }\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  waitUntilVisible(el, rootMargin, cb) {\n    if (Build.isBrowser && this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = (this.io = new window.IntersectionObserver((data) => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, { rootMargin }));\n      io.observe(el);\n    }\n    else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n  loadIcon() {\n    if (Build.isBrowser && this.isVisible) {\n      const url = getUrl(this);\n      if (url) {\n        if (ioniconContent.has(url)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url);\n        }\n        else {\n          // async if it hasn't been loaded\n          getSvgContent(url, this.sanitize).then(() => (this.svgContent = ioniconContent.get(url)));\n        }\n      }\n    }\n    const label = this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md);\n    /**\n     * Come up with a default label\n     * in case user does not provide their own.\n     */\n    if (label) {\n      this.ariaLabel = label.replace(/\\-/g, ' ');\n    }\n  }\n  render() {\n    const { iconName, ariaLabel, inheritedAttributes } = this;\n    const mode = this.mode || 'md';\n    const flipRtl = this.flipRtl ||\n      (iconName &&\n        (iconName.indexOf('arrow') > -1 || iconName.indexOf('chevron') > -1) &&\n        this.flipRtl !== false);\n    /**\n     * Only set the aria-label if a) we have generated\n     * one for the icon and if aria-hidden is not set to \"true\".\n     * If developer wants to set their own aria-label, then\n     * inheritedAttributes down below will override whatever\n     * default label we have set.\n     */\n    return (h(Host, Object.assign({ \"aria-label\": ariaLabel !== undefined && !this.hasAriaHidden() ? ariaLabel : null, role: \"img\", class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(this.color)), { [`icon-${this.size}`]: !!this.size, 'flip-rtl': !!flipRtl && this.el.ownerDocument.dir === 'rtl' }) }, inheritedAttributes), Build.isBrowser && this.svgContent ? (h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })) : (h(\"div\", { class: \"icon-inner\" }))));\n  }\n  static get assetsDirs() { return [\"svg\"]; }\n  get el() { return this; }\n  static get watchers() { return {\n    \"name\": [\"loadIcon\"],\n    \"src\": [\"loadIcon\"],\n    \"icon\": [\"loadIcon\"]\n  }; }\n  static get style() { return iconCss; }\n}, [1, \"ion-icon\", {\n    \"mode\": [1025],\n    \"color\": [1],\n    \"ios\": [1],\n    \"md\": [1],\n    \"flipRtl\": [4, \"flip-rtl\"],\n    \"name\": [513],\n    \"src\": [1],\n    \"icon\": [8],\n    \"size\": [1],\n    \"lazy\": [4],\n    \"sanitize\": [4],\n    \"svgContent\": [32],\n    \"isVisible\": [32],\n    \"ariaLabel\": [32]\n  }]);\nconst getIonMode = () => (Build.isBrowser && typeof document !== 'undefined' && document.documentElement.getAttribute('mode')) || 'md';\nconst createColorClasses = (color) => {\n  return color\n    ? {\n      'ion-color': true,\n      [`ion-color-${color}`]: true,\n    }\n    : null;\n};\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-icon\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-icon\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Icon);\n      }\n      break;\n  } });\n}\n\nconst IonIcon = Icon;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonIcon, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}