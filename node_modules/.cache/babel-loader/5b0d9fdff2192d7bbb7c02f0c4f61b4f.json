{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { c as createColorClasses } from './theme.js';\nconst textCss = \":host(.ion-color){color:var(--ion-color-base)}\";\nconst Text = /*@__PURE__*/proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.__attachShadow();\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: createColorClasses(this.color, {\n        [mode]: true\n      })\n    }, h(\"slot\", null));\n  }\n\n  static get style() {\n    return textCss;\n  }\n\n}, [1, \"ion-text\", {\n  \"color\": [513]\n}]);\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-text\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-text\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Text);\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonText = Text;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonText, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","h","Host","b","getIonMode","c","createColorClasses","textCss","Text","constructor","__registerHost","__attachShadow","render","mode","class","color","style","defineCustomElement$1","customElements","components","forEach","tagName","get","define","IonText","defineCustomElement"],"sources":["C:/Users/steve/git/controlpad/node_modules/@ionic/core/components/ion-text.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { c as createColorClasses } from './theme.js';\n\nconst textCss = \":host(.ion-color){color:var(--ion-color-base)}\";\n\nconst Text = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(this.color, {\n        [mode]: true,\n      }) }, h(\"slot\", null)));\n  }\n  static get style() { return textCss; }\n}, [1, \"ion-text\", {\n    \"color\": [513]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-text\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-text\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Text);\n      }\n      break;\n  } });\n}\n\nconst IonText = Text;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonText, defineCustomElement };\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,kBAAT,EAA6BC,WAA7B,EAA0CC,CAA1C,EAA6CC,IAA7C,QAAyD,+BAAzD;AACA,SAASC,CAAC,IAAIC,UAAd,QAAgC,mBAAhC;AACA,SAASC,CAAC,IAAIC,kBAAd,QAAwC,YAAxC;AAEA,MAAMC,OAAO,GAAG,gDAAhB;AAEA,MAAMC,IAAI,GAAG,aAAcT,kBAAkB,CAAC,cAAcC,WAAd,CAA0B;EACtES,WAAW,GAAG;IACZ;;IACA,KAAKC,cAAL;;IACA,KAAKC,cAAL;EACD;;EACDC,MAAM,GAAG;IACP,MAAMC,IAAI,GAAGT,UAAU,CAAC,IAAD,CAAvB;IACA,OAAQH,CAAC,CAACC,IAAD,EAAO;MAAEY,KAAK,EAAER,kBAAkB,CAAC,KAAKS,KAAN,EAAa;QACpD,CAACF,IAAD,GAAQ;MAD4C,CAAb;IAA3B,CAAP,EAEDZ,CAAC,CAAC,MAAD,EAAS,IAAT,CAFA,CAAT;EAGD;;EACe,WAALe,KAAK,GAAG;IAAE,OAAOT,OAAP;EAAiB;;AAZgC,CAA3B,EAa1C,CAAC,CAAD,EAAI,UAAJ,EAAgB;EACf,SAAS,CAAC,GAAD;AADM,CAAhB,CAb0C,CAA7C;;AAgBA,SAASU,qBAAT,GAAiC;EAC/B,IAAI,OAAOC,cAAP,KAA0B,WAA9B,EAA2C;IACzC;EACD;;EACD,MAAMC,UAAU,GAAG,CAAC,UAAD,CAAnB;EACAA,UAAU,CAACC,OAAX,CAAmBC,OAAO,IAAI;IAAE,QAAQA,OAAR;MAC9B,KAAK,UAAL;QACE,IAAI,CAACH,cAAc,CAACI,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;UAChCH,cAAc,CAACK,MAAf,CAAsBF,OAAtB,EAA+Bb,IAA/B;QACD;;QACD;IAL4B;EAM7B,CANH;AAOD;;AAED,MAAMgB,OAAO,GAAGhB,IAAhB;AACA,MAAMiB,mBAAmB,GAAGR,qBAA5B;AAEA,SAASO,OAAT,EAAkBC,mBAAlB"},"metadata":{},"sourceType":"module"}